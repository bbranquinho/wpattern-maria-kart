////------------------------------------------------------------------------------
//// <auto-generated>
////    This code was generated from a template.
////
////    Manual changes to this file may cause unexpected behavior in your application.
////    Manual changes to this file will be overwritten if the code is regenerated.
//// </auto-generated>
////------------------------------------------------------------------------------

//using System;
//using System.ComponentModel;
//using System.Data.EntityClient;
//using System.Data.Objects;
//using System.Data.Objects.DataClasses;
//using System.Linq;
//using System.Runtime.Serialization;
//using System.Xml.Serialization;

//[assembly: EdmSchemaAttribute()]
//#region EDM Relationship Metadata

//[assembly: EdmRelationshipAttribute("MariaKartModel", "fk_tb_character_tb_race1", "tb_race", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Maria_Kart__Game_Player_.Entities.Race), "tb_character", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Maria_Kart__Game_Player_.Entities.Character), true)]
//[assembly: EdmRelationshipAttribute("MariaKartModel", "fk_tb_race_tb_player", "tb_player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Maria_Kart__Game_Player_.Entities.Player), "tb_race", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Maria_Kart__Game_Player_.Entities.Race), true)]

//#endregion

//namespace Maria_Kart__Game_Player_.Entities
//{
//    #region Contexts
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    public partial class MariaKartEntities : ObjectContext
//    {
//        #region Constructors
    
//        /// <summary>
//        /// Initializes a new MariaKartEntities object using the connection string found in the 'MariaKartEntities' section of the application configuration file.
//        /// </summary>
//        public MariaKartEntities() : base("name=MariaKartEntities", "MariaKartEntities")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        /// <summary>
//        /// Initialize a new MariaKartEntities object.
//        /// </summary>
//        public MariaKartEntities(string connectionString) : base(connectionString, "MariaKartEntities")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        /// <summary>
//        /// Initialize a new MariaKartEntities object.
//        /// </summary>
//        public MariaKartEntities(EntityConnection connection) : base(connection, "MariaKartEntities")
//        {
//            this.ContextOptions.LazyLoadingEnabled = true;
//            OnContextCreated();
//        }
    
//        #endregion
    
//        #region Partial Methods
    
//        partial void OnContextCreated();
    
//        #endregion
    
//        #region ObjectSet Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<Character> Characters
//        {
//            get
//            {
//                if ((_Characters == null))
//                {
//                    _Characters = base.CreateObjectSet<Character>("Characters");
//                }
//                return _Characters;
//            }
//        }
//        private ObjectSet<Character> _Characters;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<Player> Players
//        {
//            get
//            {
//                if ((_Players == null))
//                {
//                    _Players = base.CreateObjectSet<Player>("Players");
//                }
//                return _Players;
//            }
//        }
//        private ObjectSet<Player> _Players;
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        public ObjectSet<Race> Races
//        {
//            get
//            {
//                if ((_Races == null))
//                {
//                    _Races = base.CreateObjectSet<Race>("Races");
//                }
//                return _Races;
//            }
//        }
//        private ObjectSet<Race> _Races;

//        #endregion

//        #region AddTo Methods
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the Characters EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddToCharacters(Character character)
//        {
//            base.AddObject("Characters", character);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the Players EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddToPlayers(Player player)
//        {
//            base.AddObject("Players", player);
//        }
    
//        /// <summary>
//        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
//        /// </summary>
//        public void AddToRaces(Race race)
//        {
//            base.AddObject("Races", race);
//        }

//        #endregion

//    }

//    #endregion

//    #region Entities
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="MariaKartModel", Name="Character")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class Character : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new Character object.
//        /// </summary>
//        /// <param name="id">Initial value of the id property.</param>
//        /// <param name="name">Initial value of the name property.</param>
//        /// <param name="speed">Initial value of the speed property.</param>
//        /// <param name="breaking">Initial value of the breaking property.</param>
//        /// <param name="acceleration">Initial value of the acceleration property.</param>
//        /// <param name="tb_race_id">Initial value of the tb_race_id property.</param>
//        public static Character CreateCharacter(global::System.Int32 id, global::System.String name, global::System.Int32 speed, global::System.Int32 breaking, global::System.Int32 acceleration, global::System.Int32 tb_race_id)
//        {
//            Character character = new Character();
//            character.id = id;
//            character.name = name;
//            character.speed = speed;
//            character.breaking = breaking;
//            character.acceleration = acceleration;
//            character.tb_race_id = tb_race_id;
//            return character;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 id
//        {
//            get
//            {
//                return _id;
//            }
//            set
//            {
//                if (_id != value)
//                {
//                    OnidChanging(value);
//                    ReportPropertyChanging("id");
//                    _id = StructuralObject.SetValidValue(value, "id");
//                    ReportPropertyChanged("id");
//                    OnidChanged();
//                }
//            }
//        }
//        private global::System.Int32 _id;
//        partial void OnidChanging(global::System.Int32 value);
//        partial void OnidChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String name
//        {
//            get
//            {
//                return _name;
//            }
//            set
//            {
//                OnnameChanging(value);
//                ReportPropertyChanging("name");
//                _name = StructuralObject.SetValidValue(value, false, "name");
//                ReportPropertyChanged("name");
//                OnnameChanged();
//            }
//        }
//        private global::System.String _name;
//        partial void OnnameChanging(global::System.String value);
//        partial void OnnameChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 speed
//        {
//            get
//            {
//                return _speed;
//            }
//            set
//            {
//                OnspeedChanging(value);
//                ReportPropertyChanging("speed");
//                _speed = StructuralObject.SetValidValue(value, "speed");
//                ReportPropertyChanged("speed");
//                OnspeedChanged();
//            }
//        }
//        private global::System.Int32 _speed;
//        partial void OnspeedChanging(global::System.Int32 value);
//        partial void OnspeedChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 breaking
//        {
//            get
//            {
//                return _breaking;
//            }
//            set
//            {
//                OnbreakingChanging(value);
//                ReportPropertyChanging("breaking");
//                _breaking = StructuralObject.SetValidValue(value, "breaking");
//                ReportPropertyChanged("breaking");
//                OnbreakingChanged();
//            }
//        }
//        private global::System.Int32 _breaking;
//        partial void OnbreakingChanging(global::System.Int32 value);
//        partial void OnbreakingChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 acceleration
//        {
//            get
//            {
//                return _acceleration;
//            }
//            set
//            {
//                OnaccelerationChanging(value);
//                ReportPropertyChanging("acceleration");
//                _acceleration = StructuralObject.SetValidValue(value, "acceleration");
//                ReportPropertyChanged("acceleration");
//                OnaccelerationChanged();
//            }
//        }
//        private global::System.Int32 _acceleration;
//        partial void OnaccelerationChanging(global::System.Int32 value);
//        partial void OnaccelerationChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
//        [DataMemberAttribute()]
//        public global::System.Byte[] picture
//        {
//            get
//            {
//                return StructuralObject.GetValidValue(_picture);
//            }
//            set
//            {
//                OnpictureChanging(value);
//                ReportPropertyChanging("picture");
//                _picture = StructuralObject.SetValidValue(value, true, "picture");
//                ReportPropertyChanged("picture");
//                OnpictureChanged();
//            }
//        }
//        private global::System.Byte[] _picture;
//        partial void OnpictureChanging(global::System.Byte[] value);
//        partial void OnpictureChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 tb_race_id
//        {
//            get
//            {
//                return _tb_race_id;
//            }
//            set
//            {
//                Ontb_race_idChanging(value);
//                ReportPropertyChanging("tb_race_id");
//                _tb_race_id = StructuralObject.SetValidValue(value, "tb_race_id");
//                ReportPropertyChanged("tb_race_id");
//                Ontb_race_idChanged();
//            }
//        }
//        private global::System.Int32 _tb_race_id;
//        partial void Ontb_race_idChanging(global::System.Int32 value);
//        partial void Ontb_race_idChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("MariaKartModel", "fk_tb_character_tb_race1", "tb_race")]
//        public Race Race
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("MariaKartModel.fk_tb_character_tb_race1", "tb_race").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("MariaKartModel.fk_tb_character_tb_race1", "tb_race").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<Race> RaceReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Race>("MariaKartModel.fk_tb_character_tb_race1", "tb_race");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Race>("MariaKartModel.fk_tb_character_tb_race1", "tb_race", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="MariaKartModel", Name="Player")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class Player : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new Player object.
//        /// </summary>
//        /// <param name="id">Initial value of the id property.</param>
//        /// <param name="name">Initial value of the name property.</param>
//        /// <param name="email">Initial value of the email property.</param>
//        public static Player CreatePlayer(global::System.Int32 id, global::System.String name, global::System.String email)
//        {
//            Player player = new Player();
//            player.id = id;
//            player.name = name;
//            player.email = email;
//            return player;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 id
//        {
//            get
//            {
//                return _id;
//            }
//            set
//            {
//                if (_id != value)
//                {
//                    OnidChanging(value);
//                    ReportPropertyChanging("id");
//                    _id = StructuralObject.SetValidValue(value, "id");
//                    ReportPropertyChanged("id");
//                    OnidChanged();
//                }
//            }
//        }
//        private global::System.Int32 _id;
//        partial void OnidChanging(global::System.Int32 value);
//        partial void OnidChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String name
//        {
//            get
//            {
//                return _name;
//            }
//            set
//            {
//                OnnameChanging(value);
//                ReportPropertyChanging("name");
//                _name = StructuralObject.SetValidValue(value, false, "name");
//                ReportPropertyChanged("name");
//                OnnameChanged();
//            }
//        }
//        private global::System.String _name;
//        partial void OnnameChanging(global::System.String value);
//        partial void OnnameChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.String email
//        {
//            get
//            {
//                return _email;
//            }
//            set
//            {
//                OnemailChanging(value);
//                ReportPropertyChanging("email");
//                _email = StructuralObject.SetValidValue(value, false, "email");
//                ReportPropertyChanged("email");
//                OnemailChanged();
//            }
//        }
//        private global::System.String _email;
//        partial void OnemailChanging(global::System.String value);
//        partial void OnemailChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
//        [DataMemberAttribute()]
//        public global::System.Byte[] picture
//        {
//            get
//            {
//                return StructuralObject.GetValidValue(_picture);
//            }
//            set
//            {
//                OnpictureChanging(value);
//                ReportPropertyChanging("picture");
//                _picture = StructuralObject.SetValidValue(value, true, "picture");
//                ReportPropertyChanged("picture");
//                OnpictureChanged();
//            }
//        }
//        private global::System.Byte[] _picture;
//        partial void OnpictureChanging(global::System.Byte[] value);
//        partial void OnpictureChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("MariaKartModel", "fk_tb_race_tb_player", "tb_race")]
//        public EntityCollection<Race> Race
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Race>("MariaKartModel.fk_tb_race_tb_player", "tb_race");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Race>("MariaKartModel.fk_tb_race_tb_player", "tb_race", value);
//                }
//            }
//        }

//        #endregion

//    }
    
//    /// <summary>
//    /// No Metadata Documentation available.
//    /// </summary>
//    [EdmEntityTypeAttribute(NamespaceName="MariaKartModel", Name="Race")]
//    [Serializable()]
//    [DataContractAttribute(IsReference=true)]
//    public partial class Race : EntityObject
//    {
//        #region Factory Method
    
//        /// <summary>
//        /// Create a new Race object.
//        /// </summary>
//        /// <param name="id">Initial value of the id property.</param>
//        /// <param name="idPlayer">Initial value of the idPlayer property.</param>
//        /// <param name="date">Initial value of the date property.</param>
//        /// <param name="totalTime">Initial value of the totalTime property.</param>
//        /// <param name="bestLapsTime">Initial value of the bestLapsTime property.</param>
//        /// <param name="totalLaps">Initial value of the totalLaps property.</param>
//        public static Race CreateRace(global::System.Int32 id, global::System.Int32 idPlayer, global::System.DateTime date, global::System.TimeSpan totalTime, global::System.TimeSpan bestLapsTime, global::System.Int32 totalLaps)
//        {
//            Race race = new Race();
//            race.id = id;
//            race.idPlayer = idPlayer;
//            race.date = date;
//            race.totalTime = totalTime;
//            race.bestLapsTime = bestLapsTime;
//            race.totalLaps = totalLaps;
//            return race;
//        }

//        #endregion

//        #region Simple Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 id
//        {
//            get
//            {
//                return _id;
//            }
//            set
//            {
//                if (_id != value)
//                {
//                    OnidChanging(value);
//                    ReportPropertyChanging("id");
//                    _id = StructuralObject.SetValidValue(value, "id");
//                    ReportPropertyChanged("id");
//                    OnidChanged();
//                }
//            }
//        }
//        private global::System.Int32 _id;
//        partial void OnidChanging(global::System.Int32 value);
//        partial void OnidChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 idPlayer
//        {
//            get
//            {
//                return _idPlayer;
//            }
//            set
//            {
//                OnidPlayerChanging(value);
//                ReportPropertyChanging("idPlayer");
//                _idPlayer = StructuralObject.SetValidValue(value, "idPlayer");
//                ReportPropertyChanged("idPlayer");
//                OnidPlayerChanged();
//            }
//        }
//        private global::System.Int32 _idPlayer;
//        partial void OnidPlayerChanging(global::System.Int32 value);
//        partial void OnidPlayerChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.DateTime date
//        {
//            get
//            {
//                return _date;
//            }
//            set
//            {
//                OndateChanging(value);
//                ReportPropertyChanging("date");
//                _date = StructuralObject.SetValidValue(value, "date");
//                ReportPropertyChanged("date");
//                OndateChanged();
//            }
//        }
//        private global::System.DateTime _date;
//        partial void OndateChanging(global::System.DateTime value);
//        partial void OndateChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.TimeSpan totalTime
//        {
//            get
//            {
//                return _totalTime;
//            }
//            set
//            {
//                OntotalTimeChanging(value);
//                ReportPropertyChanging("totalTime");
//                _totalTime = StructuralObject.SetValidValue(value, "totalTime");
//                ReportPropertyChanged("totalTime");
//                OntotalTimeChanged();
//            }
//        }
//        private global::System.TimeSpan _totalTime;
//        partial void OntotalTimeChanging(global::System.TimeSpan value);
//        partial void OntotalTimeChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.TimeSpan bestLapsTime
//        {
//            get
//            {
//                return _bestLapsTime;
//            }
//            set
//            {
//                OnbestLapsTimeChanging(value);
//                ReportPropertyChanging("bestLapsTime");
//                _bestLapsTime = StructuralObject.SetValidValue(value, "bestLapsTime");
//                ReportPropertyChanged("bestLapsTime");
//                OnbestLapsTimeChanged();
//            }
//        }
//        private global::System.TimeSpan _bestLapsTime;
//        partial void OnbestLapsTimeChanging(global::System.TimeSpan value);
//        partial void OnbestLapsTimeChanged();
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
//        [DataMemberAttribute()]
//        public global::System.Int32 totalLaps
//        {
//            get
//            {
//                return _totalLaps;
//            }
//            set
//            {
//                OntotalLapsChanging(value);
//                ReportPropertyChanging("totalLaps");
//                _totalLaps = StructuralObject.SetValidValue(value, "totalLaps");
//                ReportPropertyChanged("totalLaps");
//                OntotalLapsChanged();
//            }
//        }
//        private global::System.Int32 _totalLaps;
//        partial void OntotalLapsChanging(global::System.Int32 value);
//        partial void OntotalLapsChanged();

//        #endregion

//        #region Navigation Properties
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("MariaKartModel", "fk_tb_character_tb_race1", "tb_character")]
//        public EntityCollection<Character> Character
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Character>("MariaKartModel.fk_tb_character_tb_race1", "tb_character");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Character>("MariaKartModel.fk_tb_character_tb_race1", "tb_character", value);
//                }
//            }
//        }
    
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [XmlIgnoreAttribute()]
//        [SoapIgnoreAttribute()]
//        [DataMemberAttribute()]
//        [EdmRelationshipNavigationPropertyAttribute("MariaKartModel", "fk_tb_race_tb_player", "tb_player")]
//        public Player Player
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MariaKartModel.fk_tb_race_tb_player", "tb_player").Value;
//            }
//            set
//            {
//                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MariaKartModel.fk_tb_race_tb_player", "tb_player").Value = value;
//            }
//        }
//        /// <summary>
//        /// No Metadata Documentation available.
//        /// </summary>
//        [BrowsableAttribute(false)]
//        [DataMemberAttribute()]
//        public EntityReference<Player> PlayerReference
//        {
//            get
//            {
//                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("MariaKartModel.fk_tb_race_tb_player", "tb_player");
//            }
//            set
//            {
//                if ((value != null))
//                {
//                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("MariaKartModel.fk_tb_race_tb_player", "tb_player", value);
//                }
//            }
//        }

//        #endregion

//    }

//    #endregion

//}
